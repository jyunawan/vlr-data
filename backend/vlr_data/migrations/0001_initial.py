# Generated by Django 5.2.4 on 2025-09-24 01:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Event')),
                ('series', models.CharField(max_length=100, verbose_name='Series')),
                ('vlr_url', models.URLField(unique=True, verbose_name='Event Series URL')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Team Name')),
                ('team_tag', models.CharField(max_length=5, verbose_name='Team Tag')),
                ('team_rating', models.PositiveSmallIntegerField(verbose_name='Team Rating')),
                ('vlr_id', models.CharField(unique=True, verbose_name='VLR Team ID')),
                ('last_updated', models.DateTimeField(verbose_name='Last Updated')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_played', models.DateTimeField(verbose_name='Match Date')),
                ('vlr_id', models.CharField(unique=True, verbose_name='VLR Match ID')),
                ('is_finished', models.BooleanField(verbose_name='Match Finished')),
                ('team1_score', models.PositiveSmallIntegerField(verbose_name='Team 1 Score')),
                ('team2_score', models.PositiveSmallIntegerField(verbose_name='Team 2 Score')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='vlr_data.event')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_1_matches', to='vlr_data.team')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_2_matches', to='vlr_data.team')),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('map_number', models.PositiveSmallIntegerField(verbose_name='Map Number')),
                ('game_id', models.CharField(unique=True, verbose_name='VLR Game ID')),
                ('team1_score', models.PositiveSmallIntegerField(verbose_name='Team 1 Score')),
                ('team2_score', models.PositiveSmallIntegerField(verbose_name='Team 2 Score')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vlr_data.match')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ign', models.CharField(max_length=100, verbose_name='In Game Name')),
                ('real_name', models.CharField(max_length=200, verbose_name='Real Name')),
                ('vlr_id', models.CharField(unique=True, verbose_name='VLR Player ID')),
                ('last_updated', models.DateTimeField(verbose_name='Last Updated')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vlr_data.team')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kills', models.PositiveSmallIntegerField(verbose_name='Kills')),
                ('deaths', models.PositiveSmallIntegerField(verbose_name='Deaths')),
                ('assists', models.PositiveSmallIntegerField(verbose_name='Assists')),
                ('acs', models.PositiveSmallIntegerField(verbose_name='Average Combat Score')),
                ('agent', models.CharField(verbose_name='Agent Played')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vlr_data.map')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vlr_data.player')),
            ],
            options={
                'unique_together': {('player', 'map')},
            },
        ),
    ]
