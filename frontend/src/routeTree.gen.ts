/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeamsIndexRouteImport } from './routes/teams/index'
import { Route as PlayersIndexRouteImport } from './routes/players/index'
import { Route as MatchesIndexRouteImport } from './routes/matches/index'
import { Route as MatchesMatchIdRouteImport } from './routes/matches/$matchId'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamsIndexRoute = TeamsIndexRouteImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => rootRouteImport,
} as any)
const PlayersIndexRoute = PlayersIndexRouteImport.update({
  id: '/players/',
  path: '/players/',
  getParentRoute: () => rootRouteImport,
} as any)
const MatchesIndexRoute = MatchesIndexRouteImport.update({
  id: '/matches/',
  path: '/matches/',
  getParentRoute: () => rootRouteImport,
} as any)
const MatchesMatchIdRoute = MatchesMatchIdRouteImport.update({
  id: '/matches/$matchId',
  path: '/matches/$matchId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/matches/$matchId': typeof MatchesMatchIdRoute
  '/matches': typeof MatchesIndexRoute
  '/players': typeof PlayersIndexRoute
  '/teams': typeof TeamsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/matches/$matchId': typeof MatchesMatchIdRoute
  '/matches': typeof MatchesIndexRoute
  '/players': typeof PlayersIndexRoute
  '/teams': typeof TeamsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/matches/$matchId': typeof MatchesMatchIdRoute
  '/matches/': typeof MatchesIndexRoute
  '/players/': typeof PlayersIndexRoute
  '/teams/': typeof TeamsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/matches/$matchId'
    | '/matches'
    | '/players'
    | '/teams'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/matches/$matchId' | '/matches' | '/players' | '/teams'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/matches/$matchId'
    | '/matches/'
    | '/players/'
    | '/teams/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  MatchesMatchIdRoute: typeof MatchesMatchIdRoute
  MatchesIndexRoute: typeof MatchesIndexRoute
  PlayersIndexRoute: typeof PlayersIndexRoute
  TeamsIndexRoute: typeof TeamsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teams/': {
      id: '/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof TeamsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/players/': {
      id: '/players/'
      path: '/players'
      fullPath: '/players'
      preLoaderRoute: typeof PlayersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/matches/': {
      id: '/matches/'
      path: '/matches'
      fullPath: '/matches'
      preLoaderRoute: typeof MatchesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/matches/$matchId': {
      id: '/matches/$matchId'
      path: '/matches/$matchId'
      fullPath: '/matches/$matchId'
      preLoaderRoute: typeof MatchesMatchIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  MatchesMatchIdRoute: MatchesMatchIdRoute,
  MatchesIndexRoute: MatchesIndexRoute,
  PlayersIndexRoute: PlayersIndexRoute,
  TeamsIndexRoute: TeamsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
